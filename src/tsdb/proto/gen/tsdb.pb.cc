// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsdb.proto
// Protobuf C++ Version: 5.29.3

#include "tsdb.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tsdb {
namespace proto {

inline constexpr TimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : start_time_{::int64_t{0}},
        end_time_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TimeRange::TimeRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeRangeDefaultTypeInternal() {}
  union {
    TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeRangeDefaultTypeInternal _TimeRange_default_instance_;

inline constexpr Sample::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::int64_t{0}},
        value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Sample::Sample(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SampleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SampleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SampleDefaultTypeInternal() {}
  union {
    Sample _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SampleDefaultTypeInternal _Sample_default_instance_;

inline constexpr LabelValuesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LabelValuesResponse::LabelValuesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelValuesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelValuesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelValuesResponseDefaultTypeInternal() {}
  union {
    LabelValuesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelValuesResponseDefaultTypeInternal _LabelValuesResponse_default_instance_;

inline constexpr LabelNamesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LabelNamesResponse::LabelNamesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelNamesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelNamesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelNamesResponseDefaultTypeInternal() {}
  union {
    LabelNamesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelNamesResponseDefaultTypeInternal _LabelNamesResponse_default_instance_;

inline constexpr LabelMatcher::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::tsdb::proto::LabelMatcher_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LabelMatcher::LabelMatcher(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelMatcherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelMatcherDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelMatcherDefaultTypeInternal() {}
  union {
    LabelMatcher _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelMatcherDefaultTypeInternal _LabelMatcher_default_instance_;

inline constexpr Label::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Label::Label(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelDefaultTypeInternal() {}
  union {
    Label _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelDefaultTypeInternal _Label_default_instance_;

inline constexpr TimeSeries::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : labels_{},
        samples_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TimeSeries::TimeSeries(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimeSeriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeSeriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeSeriesDefaultTypeInternal() {}
  union {
    TimeSeries _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeSeriesDefaultTypeInternal _TimeSeries_default_instance_;

inline constexpr QueryParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matchers_{},
        time_range_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryParams::QueryParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsDefaultTypeInternal() {}
  union {
    QueryParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsDefaultTypeInternal _QueryParams_default_instance_;

inline constexpr SeriesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : series_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SeriesResponse::SeriesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SeriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeriesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeriesResponseDefaultTypeInternal() {}
  union {
    SeriesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeriesResponseDefaultTypeInternal _SeriesResponse_default_instance_;

inline constexpr LabelValuesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LabelValuesRequest::LabelValuesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelValuesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelValuesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelValuesRequestDefaultTypeInternal() {}
  union {
    LabelValuesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelValuesRequestDefaultTypeInternal _LabelValuesRequest_default_instance_;
}  // namespace proto
}  // namespace tsdb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tsdb_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tsdb_2eproto = nullptr;
const ::uint32_t
    TableStruct_tsdb_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Sample, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Sample, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Sample, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Label, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Label, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::Label, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeSeries, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeSeries, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeSeries, _impl_.samples_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelMatcher, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelMatcher, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelMatcher, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelMatcher, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeRange, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::TimeRange, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::QueryParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::QueryParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::QueryParams, _impl_.time_range_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::QueryParams, _impl_.matchers_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesRequest, _impl_.label_name_),
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesRequest, _impl_.params_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelNamesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelNamesResponse, _impl_.names_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::LabelValuesResponse, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::SeriesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tsdb::proto::SeriesResponse, _impl_.series_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tsdb::proto::Sample)},
        {10, -1, -1, sizeof(::tsdb::proto::Label)},
        {20, -1, -1, sizeof(::tsdb::proto::TimeSeries)},
        {30, -1, -1, sizeof(::tsdb::proto::LabelMatcher)},
        {41, -1, -1, sizeof(::tsdb::proto::TimeRange)},
        {51, 61, -1, sizeof(::tsdb::proto::QueryParams)},
        {63, 73, -1, sizeof(::tsdb::proto::LabelValuesRequest)},
        {75, -1, -1, sizeof(::tsdb::proto::LabelNamesResponse)},
        {84, -1, -1, sizeof(::tsdb::proto::LabelValuesResponse)},
        {93, -1, -1, sizeof(::tsdb::proto::SeriesResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tsdb::proto::_Sample_default_instance_._instance,
    &::tsdb::proto::_Label_default_instance_._instance,
    &::tsdb::proto::_TimeSeries_default_instance_._instance,
    &::tsdb::proto::_LabelMatcher_default_instance_._instance,
    &::tsdb::proto::_TimeRange_default_instance_._instance,
    &::tsdb::proto::_QueryParams_default_instance_._instance,
    &::tsdb::proto::_LabelValuesRequest_default_instance_._instance,
    &::tsdb::proto::_LabelNamesResponse_default_instance_._instance,
    &::tsdb::proto::_LabelValuesResponse_default_instance_._instance,
    &::tsdb::proto::_SeriesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_tsdb_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ntsdb.proto\022\ntsdb.proto\"*\n\006Sample\022\021\n\tti"
    "mestamp\030\001 \001(\003\022\r\n\005value\030\002 \001(\001\"$\n\005Label\022\014\n"
    "\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"T\n\nTimeSeries"
    "\022!\n\006labels\030\001 \003(\0132\021.tsdb.proto.Label\022#\n\007s"
    "amples\030\002 \003(\0132\022.tsdb.proto.Sample\"\202\001\n\014Lab"
    "elMatcher\022+\n\004type\030\001 \001(\0162\035.tsdb.proto.Lab"
    "elMatcher.Type\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 "
    "\001(\t\"(\n\004Type\022\006\n\002EQ\020\000\022\007\n\003NEQ\020\001\022\006\n\002RE\020\002\022\007\n\003"
    "NRE\020\003\"1\n\tTimeRange\022\022\n\nstart_time\030\001 \001(\003\022\020"
    "\n\010end_time\030\002 \001(\003\"d\n\013QueryParams\022)\n\ntime_"
    "range\030\001 \001(\0132\025.tsdb.proto.TimeRange\022*\n\010ma"
    "tchers\030\002 \003(\0132\030.tsdb.proto.LabelMatcher\"Q"
    "\n\022LabelValuesRequest\022\022\n\nlabel_name\030\001 \001(\t"
    "\022\'\n\006params\030\002 \001(\0132\027.tsdb.proto.QueryParam"
    "s\"#\n\022LabelNamesResponse\022\r\n\005names\030\001 \003(\t\"%"
    "\n\023LabelValuesResponse\022\016\n\006values\030\001 \003(\t\"8\n"
    "\016SeriesResponse\022&\n\006series\030\001 \003(\0132\026.tsdb.p"
    "roto.TimeSeries2\354\001\n\013TSDBService\022H\n\rGetLa"
    "belNames\022\027.tsdb.proto.QueryParams\032\036.tsdb"
    ".proto.LabelNamesResponse\022Q\n\016GetLabelVal"
    "ues\022\036.tsdb.proto.LabelValuesRequest\032\037.ts"
    "db.proto.LabelValuesResponse\022@\n\tGetSerie"
    "s\022\027.tsdb.proto.QueryParams\032\032.tsdb.proto."
    "SeriesResponseB6Z4github.com/vobbilis/co"
    "degen/mytsdb/go-tsdb/proto/genb\006proto3"
};
static ::absl::once_flag descriptor_table_tsdb_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tsdb_2eproto = {
    false,
    false,
    998,
    descriptor_table_protodef_tsdb_2eproto,
    "tsdb.proto",
    &descriptor_table_tsdb_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_tsdb_2eproto::offsets,
    file_level_enum_descriptors_tsdb_2eproto,
    file_level_service_descriptors_tsdb_2eproto,
};
namespace tsdb {
namespace proto {
const ::google::protobuf::EnumDescriptor* LabelMatcher_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsdb_2eproto);
  return file_level_enum_descriptors_tsdb_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LabelMatcher_Type_internal_data_[] = {
    262144u, 0u, };
bool LabelMatcher_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LabelMatcher_Type LabelMatcher::EQ;
constexpr LabelMatcher_Type LabelMatcher::NEQ;
constexpr LabelMatcher_Type LabelMatcher::RE;
constexpr LabelMatcher_Type LabelMatcher::NRE;
constexpr LabelMatcher_Type LabelMatcher::Type_MIN;
constexpr LabelMatcher_Type LabelMatcher::Type_MAX;
constexpr int LabelMatcher::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Sample::_Internal {
 public:
};

Sample::Sample(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.Sample)
}
Sample::Sample(
    ::google::protobuf::Arena* arena, const Sample& from)
    : Sample(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Sample::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Sample::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::value_));
}
Sample::~Sample() {
  // @@protoc_insertion_point(destructor:tsdb.proto.Sample)
  SharedDtor(*this);
}
inline void Sample::SharedDtor(MessageLite& self) {
  Sample& this_ = static_cast<Sample&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Sample::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Sample(arena);
}
constexpr auto Sample::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Sample),
                                            alignof(Sample));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Sample::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Sample_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Sample::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Sample>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Sample::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Sample>(), &Sample::ByteSizeLong,
            &Sample::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Sample, _impl_._cached_size_),
        false,
    },
    &Sample::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Sample::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Sample::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::Sample>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Sample, _impl_.value_)}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Sample, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Sample, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Sample, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(Sample, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Sample::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.Sample)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Sample::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Sample& this_ = static_cast<const Sample&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Sample::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Sample& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.Sample)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_timestamp(), target);
          }

          // double value = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_value(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.Sample)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Sample::ByteSizeLong(const MessageLite& base) {
          const Sample& this_ = static_cast<const Sample&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Sample::ByteSizeLong() const {
          const Sample& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.Sample)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // double value = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Sample::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Sample*>(&to_msg);
  auto& from = static_cast<const Sample&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.Sample)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sample::CopyFrom(const Sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Sample::InternalSwap(Sample* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Sample, _impl_.value_)
      + sizeof(Sample::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(Sample, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata Sample::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Label::_Internal {
 public:
};

Label::Label(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::Label& from_msg)
      : name_(arena, from.name_),
        value_(arena, from.value_),
        _cached_size_{0} {}

Label::Label(
    ::google::protobuf::Arena* arena,
    const Label& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Label* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void Label::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Label::~Label() {
  // @@protoc_insertion_point(destructor:tsdb.proto.Label)
  SharedDtor(*this);
}
inline void Label::SharedDtor(MessageLite& self) {
  Label& this_ = static_cast<Label&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Label::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Label(arena);
}
constexpr auto Label::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Label),
                                            alignof(Label));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Label::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Label_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Label::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Label>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Label::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Label>(), &Label::ByteSizeLong,
            &Label::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Label, _impl_._cached_size_),
        false,
    },
    &Label::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Label::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 34, 2> Label::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::Label>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.value_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\4\5\0\0\0\0\0"
    "tsdb.proto.Label"
    "name"
    "value"
  }},
};

PROTOBUF_NOINLINE void Label::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.Label)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Label::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Label::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.Label)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.Label.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.Label.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.Label)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Label::ByteSizeLong(const MessageLite& base) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Label::ByteSizeLong() const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.Label)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string value = 2;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Label::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Label*>(&to_msg);
  auto& from = static_cast<const Label&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.Label)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Label::CopyFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Label::InternalSwap(Label* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Label::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimeSeries::_Internal {
 public:
};

TimeSeries::TimeSeries(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.TimeSeries)
}
inline PROTOBUF_NDEBUG_INLINE TimeSeries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::TimeSeries& from_msg)
      : labels_{visibility, arena, from.labels_},
        samples_{visibility, arena, from.samples_},
        _cached_size_{0} {}

TimeSeries::TimeSeries(
    ::google::protobuf::Arena* arena,
    const TimeSeries& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TimeSeries* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.TimeSeries)
}
inline PROTOBUF_NDEBUG_INLINE TimeSeries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : labels_{visibility, arena},
        samples_{visibility, arena},
        _cached_size_{0} {}

inline void TimeSeries::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TimeSeries::~TimeSeries() {
  // @@protoc_insertion_point(destructor:tsdb.proto.TimeSeries)
  SharedDtor(*this);
}
inline void TimeSeries::SharedDtor(MessageLite& self) {
  TimeSeries& this_ = static_cast<TimeSeries&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TimeSeries::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TimeSeries(arena);
}
constexpr auto TimeSeries::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.labels_) +
          decltype(TimeSeries::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.samples_) +
          decltype(TimeSeries::_impl_.samples_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TimeSeries), alignof(TimeSeries), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TimeSeries::PlacementNew_,
                                 sizeof(TimeSeries),
                                 alignof(TimeSeries));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TimeSeries::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TimeSeries_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TimeSeries::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TimeSeries>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TimeSeries::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TimeSeries>(), &TimeSeries::ByteSizeLong,
            &TimeSeries::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_._cached_size_),
        false,
    },
    &TimeSeries::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TimeSeries::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TimeSeries::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::TimeSeries>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tsdb.proto.Sample samples = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.samples_)}},
    // repeated .tsdb.proto.Label labels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.labels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tsdb.proto.Label labels = 1;
    {PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tsdb.proto.Sample samples = 2;
    {PROTOBUF_FIELD_OFFSET(TimeSeries, _impl_.samples_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsdb::proto::Label>()},
    {::_pbi::TcParser::GetTable<::tsdb::proto::Sample>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TimeSeries::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.TimeSeries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.samples_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TimeSeries::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TimeSeries& this_ = static_cast<const TimeSeries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TimeSeries::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TimeSeries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.TimeSeries)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tsdb.proto.Label labels = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_labels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_labels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tsdb.proto.Sample samples = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_samples_size());
               i < n; i++) {
            const auto& repfield = this_._internal_samples().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.TimeSeries)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TimeSeries::ByteSizeLong(const MessageLite& base) {
          const TimeSeries& this_ = static_cast<const TimeSeries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TimeSeries::ByteSizeLong() const {
          const TimeSeries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.TimeSeries)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tsdb.proto.Label labels = 1;
            {
              total_size += 1UL * this_._internal_labels_size();
              for (const auto& msg : this_._internal_labels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tsdb.proto.Sample samples = 2;
            {
              total_size += 1UL * this_._internal_samples_size();
              for (const auto& msg : this_._internal_samples()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TimeSeries::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimeSeries*>(&to_msg);
  auto& from = static_cast<const TimeSeries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.TimeSeries)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(
      from._internal_labels());
  _this->_internal_mutable_samples()->MergeFrom(
      from._internal_samples());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeSeries::CopyFrom(const TimeSeries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.TimeSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimeSeries::InternalSwap(TimeSeries* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  _impl_.samples_.InternalSwap(&other->_impl_.samples_);
}

::google::protobuf::Metadata TimeSeries::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelMatcher::_Internal {
 public:
};

LabelMatcher::LabelMatcher(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.LabelMatcher)
}
inline PROTOBUF_NDEBUG_INLINE LabelMatcher::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::LabelMatcher& from_msg)
      : name_(arena, from.name_),
        value_(arena, from.value_),
        _cached_size_{0} {}

LabelMatcher::LabelMatcher(
    ::google::protobuf::Arena* arena,
    const LabelMatcher& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LabelMatcher* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.LabelMatcher)
}
inline PROTOBUF_NDEBUG_INLINE LabelMatcher::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void LabelMatcher::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
LabelMatcher::~LabelMatcher() {
  // @@protoc_insertion_point(destructor:tsdb.proto.LabelMatcher)
  SharedDtor(*this);
}
inline void LabelMatcher::SharedDtor(MessageLite& self) {
  LabelMatcher& this_ = static_cast<LabelMatcher&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LabelMatcher::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LabelMatcher(arena);
}
constexpr auto LabelMatcher::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LabelMatcher),
                                            alignof(LabelMatcher));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LabelMatcher::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LabelMatcher_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LabelMatcher::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LabelMatcher>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LabelMatcher::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LabelMatcher>(), &LabelMatcher::ByteSizeLong,
            &LabelMatcher::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_._cached_size_),
        false,
    },
    &LabelMatcher::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LabelMatcher::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 41, 2> LabelMatcher::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::LabelMatcher>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tsdb.proto.LabelMatcher.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LabelMatcher, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.type_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.name_)}},
    // string value = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tsdb.proto.LabelMatcher.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 3;
    {PROTOBUF_FIELD_OFFSET(LabelMatcher, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\4\5\0\0\0\0"
    "tsdb.proto.LabelMatcher"
    "name"
    "value"
  }},
};

PROTOBUF_NOINLINE void LabelMatcher::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.LabelMatcher)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LabelMatcher::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LabelMatcher& this_ = static_cast<const LabelMatcher&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LabelMatcher::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LabelMatcher& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.LabelMatcher)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tsdb.proto.LabelMatcher.Type type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.LabelMatcher.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string value = 3;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.LabelMatcher.value");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.LabelMatcher)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LabelMatcher::ByteSizeLong(const MessageLite& base) {
          const LabelMatcher& this_ = static_cast<const LabelMatcher&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LabelMatcher::ByteSizeLong() const {
          const LabelMatcher& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.LabelMatcher)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string value = 3;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // .tsdb.proto.LabelMatcher.Type type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LabelMatcher::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelMatcher*>(&to_msg);
  auto& from = static_cast<const LabelMatcher&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.LabelMatcher)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelMatcher::CopyFrom(const LabelMatcher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.LabelMatcher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelMatcher::InternalSwap(LabelMatcher* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata LabelMatcher::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimeRange::_Internal {
 public:
};

TimeRange::TimeRange(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.TimeRange)
}
TimeRange::TimeRange(
    ::google::protobuf::Arena* arena, const TimeRange& from)
    : TimeRange(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TimeRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::end_time_));
}
TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:tsdb.proto.TimeRange)
  SharedDtor(*this);
}
inline void TimeRange::SharedDtor(MessageLite& self) {
  TimeRange& this_ = static_cast<TimeRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TimeRange::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TimeRange(arena);
}
constexpr auto TimeRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TimeRange),
                                            alignof(TimeRange));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TimeRange::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TimeRange_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TimeRange::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TimeRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TimeRange::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TimeRange>(), &TimeRange::ByteSizeLong,
            &TimeRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._cached_size_),
        false,
    },
    &TimeRange::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TimeRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TimeRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::TimeRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 end_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.end_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_)}},
    // int64 start_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.start_time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start_time = 1;
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 end_time = 2;
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.TimeRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.start_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.end_time_) -
      reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.end_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TimeRange::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TimeRange& this_ = static_cast<const TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TimeRange::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.TimeRange)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 start_time = 1;
          if (this_._internal_start_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_start_time(), target);
          }

          // int64 end_time = 2;
          if (this_._internal_end_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_end_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.TimeRange)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TimeRange::ByteSizeLong(const MessageLite& base) {
          const TimeRange& this_ = static_cast<const TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TimeRange::ByteSizeLong() const {
          const TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.TimeRange)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 start_time = 1;
            if (this_._internal_start_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_time());
            }
            // int64 end_time = 2;
            if (this_._internal_end_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_end_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TimeRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimeRange*>(&to_msg);
  auto& from = static_cast<const TimeRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_time() != 0) {
    _this->_impl_.start_time_ = from._impl_.start_time_;
  }
  if (from._internal_end_time() != 0) {
    _this->_impl_.end_time_ = from._impl_.end_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimeRange::InternalSwap(TimeRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_)
      + sizeof(TimeRange::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryParams, _impl_._has_bits_);
};

QueryParams::QueryParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.QueryParams)
}
inline PROTOBUF_NDEBUG_INLINE QueryParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::QueryParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        matchers_{visibility, arena, from.matchers_} {}

QueryParams::QueryParams(
    ::google::protobuf::Arena* arena,
    const QueryParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_range_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tsdb::proto::TimeRange>(
                              arena, *from._impl_.time_range_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.QueryParams)
}
inline PROTOBUF_NDEBUG_INLINE QueryParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        matchers_{visibility, arena} {}

inline void QueryParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_range_ = {};
}
QueryParams::~QueryParams() {
  // @@protoc_insertion_point(destructor:tsdb.proto.QueryParams)
  SharedDtor(*this);
}
inline void QueryParams::SharedDtor(MessageLite& self) {
  QueryParams& this_ = static_cast<QueryParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.time_range_;
  this_._impl_.~Impl_();
}

inline void* QueryParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryParams(arena);
}
constexpr auto QueryParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryParams, _impl_.matchers_) +
          decltype(QueryParams::_impl_.matchers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryParams), alignof(QueryParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryParams::PlacementNew_,
                                 sizeof(QueryParams),
                                 alignof(QueryParams));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryParams>(), &QueryParams::ByteSizeLong,
            &QueryParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryParams, _impl_._cached_size_),
        false,
    },
    &QueryParams::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryParams, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::QueryParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tsdb.proto.LabelMatcher matchers = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(QueryParams, _impl_.matchers_)}},
    // .tsdb.proto.TimeRange time_range = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryParams, _impl_.time_range_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tsdb.proto.TimeRange time_range = 1;
    {PROTOBUF_FIELD_OFFSET(QueryParams, _impl_.time_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tsdb.proto.LabelMatcher matchers = 2;
    {PROTOBUF_FIELD_OFFSET(QueryParams, _impl_.matchers_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsdb::proto::TimeRange>()},
    {::_pbi::TcParser::GetTable<::tsdb::proto::LabelMatcher>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.QueryParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matchers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_range_ != nullptr);
    _impl_.time_range_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryParams& this_ = static_cast<const QueryParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.QueryParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tsdb.proto.TimeRange time_range = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.time_range_, this_._impl_.time_range_->GetCachedSize(), target,
                stream);
          }

          // repeated .tsdb.proto.LabelMatcher matchers = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_matchers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_matchers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.QueryParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryParams::ByteSizeLong(const MessageLite& base) {
          const QueryParams& this_ = static_cast<const QueryParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryParams::ByteSizeLong() const {
          const QueryParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.QueryParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tsdb.proto.LabelMatcher matchers = 2;
            {
              total_size += 1UL * this_._internal_matchers_size();
              for (const auto& msg : this_._internal_matchers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tsdb.proto.TimeRange time_range = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_range_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryParams*>(&to_msg);
  auto& from = static_cast<const QueryParams&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.QueryParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matchers()->MergeFrom(
      from._internal_matchers());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.time_range_ != nullptr);
    if (_this->_impl_.time_range_ == nullptr) {
      _this->_impl_.time_range_ =
          ::google::protobuf::Message::CopyConstruct<::tsdb::proto::TimeRange>(arena, *from._impl_.time_range_);
    } else {
      _this->_impl_.time_range_->MergeFrom(*from._impl_.time_range_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParams::CopyFrom(const QueryParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.QueryParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryParams::InternalSwap(QueryParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matchers_.InternalSwap(&other->_impl_.matchers_);
  swap(_impl_.time_range_, other->_impl_.time_range_);
}

::google::protobuf::Metadata QueryParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelValuesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LabelValuesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_._has_bits_);
};

LabelValuesRequest::LabelValuesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.LabelValuesRequest)
}
inline PROTOBUF_NDEBUG_INLINE LabelValuesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::LabelValuesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        label_name_(arena, from.label_name_) {}

LabelValuesRequest::LabelValuesRequest(
    ::google::protobuf::Arena* arena,
    const LabelValuesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LabelValuesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tsdb::proto::QueryParams>(
                              arena, *from._impl_.params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.LabelValuesRequest)
}
inline PROTOBUF_NDEBUG_INLINE LabelValuesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        label_name_(arena) {}

inline void LabelValuesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.params_ = {};
}
LabelValuesRequest::~LabelValuesRequest() {
  // @@protoc_insertion_point(destructor:tsdb.proto.LabelValuesRequest)
  SharedDtor(*this);
}
inline void LabelValuesRequest::SharedDtor(MessageLite& self) {
  LabelValuesRequest& this_ = static_cast<LabelValuesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.label_name_.Destroy();
  delete this_._impl_.params_;
  this_._impl_.~Impl_();
}

inline void* LabelValuesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LabelValuesRequest(arena);
}
constexpr auto LabelValuesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LabelValuesRequest),
                                            alignof(LabelValuesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LabelValuesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LabelValuesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LabelValuesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LabelValuesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LabelValuesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LabelValuesRequest>(), &LabelValuesRequest::ByteSizeLong,
            &LabelValuesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_._cached_size_),
        false,
    },
    &LabelValuesRequest::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LabelValuesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> LabelValuesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::LabelValuesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tsdb.proto.QueryParams params = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_.params_)}},
    // string label_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_.label_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string label_name = 1;
    {PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_.label_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tsdb.proto.QueryParams params = 2;
    {PROTOBUF_FIELD_OFFSET(LabelValuesRequest, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsdb::proto::QueryParams>()},
  }}, {{
    "\35\12\0\0\0\0\0\0"
    "tsdb.proto.LabelValuesRequest"
    "label_name"
  }},
};

PROTOBUF_NOINLINE void LabelValuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.LabelValuesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.label_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LabelValuesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LabelValuesRequest& this_ = static_cast<const LabelValuesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LabelValuesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LabelValuesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.LabelValuesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string label_name = 1;
          if (!this_._internal_label_name().empty()) {
            const std::string& _s = this_._internal_label_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.LabelValuesRequest.label_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tsdb.proto.QueryParams params = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.LabelValuesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LabelValuesRequest::ByteSizeLong(const MessageLite& base) {
          const LabelValuesRequest& this_ = static_cast<const LabelValuesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LabelValuesRequest::ByteSizeLong() const {
          const LabelValuesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.LabelValuesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string label_name = 1;
            if (!this_._internal_label_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_name());
            }
          }
           {
            // .tsdb.proto.QueryParams params = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LabelValuesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelValuesRequest*>(&to_msg);
  auto& from = static_cast<const LabelValuesRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.LabelValuesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_label_name().empty()) {
    _this->_internal_set_label_name(from._internal_label_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.params_ != nullptr);
    if (_this->_impl_.params_ == nullptr) {
      _this->_impl_.params_ =
          ::google::protobuf::Message::CopyConstruct<::tsdb::proto::QueryParams>(arena, *from._impl_.params_);
    } else {
      _this->_impl_.params_->MergeFrom(*from._impl_.params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelValuesRequest::CopyFrom(const LabelValuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.LabelValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelValuesRequest::InternalSwap(LabelValuesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_name_, &other->_impl_.label_name_, arena);
  swap(_impl_.params_, other->_impl_.params_);
}

::google::protobuf::Metadata LabelValuesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelNamesResponse::_Internal {
 public:
};

LabelNamesResponse::LabelNamesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.LabelNamesResponse)
}
inline PROTOBUF_NDEBUG_INLINE LabelNamesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::LabelNamesResponse& from_msg)
      : names_{visibility, arena, from.names_},
        _cached_size_{0} {}

LabelNamesResponse::LabelNamesResponse(
    ::google::protobuf::Arena* arena,
    const LabelNamesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LabelNamesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.LabelNamesResponse)
}
inline PROTOBUF_NDEBUG_INLINE LabelNamesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : names_{visibility, arena},
        _cached_size_{0} {}

inline void LabelNamesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LabelNamesResponse::~LabelNamesResponse() {
  // @@protoc_insertion_point(destructor:tsdb.proto.LabelNamesResponse)
  SharedDtor(*this);
}
inline void LabelNamesResponse::SharedDtor(MessageLite& self) {
  LabelNamesResponse& this_ = static_cast<LabelNamesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LabelNamesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LabelNamesResponse(arena);
}
constexpr auto LabelNamesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LabelNamesResponse, _impl_.names_) +
          decltype(LabelNamesResponse::_impl_.names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LabelNamesResponse), alignof(LabelNamesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LabelNamesResponse::PlacementNew_,
                                 sizeof(LabelNamesResponse),
                                 alignof(LabelNamesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LabelNamesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LabelNamesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LabelNamesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LabelNamesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LabelNamesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LabelNamesResponse>(), &LabelNamesResponse::ByteSizeLong,
            &LabelNamesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LabelNamesResponse, _impl_._cached_size_),
        false,
    },
    &LabelNamesResponse::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LabelNamesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> LabelNamesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::LabelNamesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LabelNamesResponse, _impl_.names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string names = 1;
    {PROTOBUF_FIELD_OFFSET(LabelNamesResponse, _impl_.names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\5\0\0\0\0\0\0"
    "tsdb.proto.LabelNamesResponse"
    "names"
  }},
};

PROTOBUF_NOINLINE void LabelNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.LabelNamesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LabelNamesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LabelNamesResponse& this_ = static_cast<const LabelNamesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LabelNamesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LabelNamesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.LabelNamesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string names = 1;
          for (int i = 0, n = this_._internal_names_size(); i < n; ++i) {
            const auto& s = this_._internal_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.LabelNamesResponse.names");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.LabelNamesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LabelNamesResponse::ByteSizeLong(const MessageLite& base) {
          const LabelNamesResponse& this_ = static_cast<const LabelNamesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LabelNamesResponse::ByteSizeLong() const {
          const LabelNamesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.LabelNamesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string names = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_names().size());
              for (int i = 0, n = this_._internal_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_names().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LabelNamesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelNamesResponse*>(&to_msg);
  auto& from = static_cast<const LabelNamesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.LabelNamesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_names()->MergeFrom(from._internal_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelNamesResponse::CopyFrom(const LabelNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.LabelNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelNamesResponse::InternalSwap(LabelNamesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
}

::google::protobuf::Metadata LabelNamesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelValuesResponse::_Internal {
 public:
};

LabelValuesResponse::LabelValuesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.LabelValuesResponse)
}
inline PROTOBUF_NDEBUG_INLINE LabelValuesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::LabelValuesResponse& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

LabelValuesResponse::LabelValuesResponse(
    ::google::protobuf::Arena* arena,
    const LabelValuesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LabelValuesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.LabelValuesResponse)
}
inline PROTOBUF_NDEBUG_INLINE LabelValuesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void LabelValuesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LabelValuesResponse::~LabelValuesResponse() {
  // @@protoc_insertion_point(destructor:tsdb.proto.LabelValuesResponse)
  SharedDtor(*this);
}
inline void LabelValuesResponse::SharedDtor(MessageLite& self) {
  LabelValuesResponse& this_ = static_cast<LabelValuesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LabelValuesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LabelValuesResponse(arena);
}
constexpr auto LabelValuesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LabelValuesResponse, _impl_.values_) +
          decltype(LabelValuesResponse::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LabelValuesResponse), alignof(LabelValuesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LabelValuesResponse::PlacementNew_,
                                 sizeof(LabelValuesResponse),
                                 alignof(LabelValuesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LabelValuesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LabelValuesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LabelValuesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LabelValuesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LabelValuesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LabelValuesResponse>(), &LabelValuesResponse::ByteSizeLong,
            &LabelValuesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LabelValuesResponse, _impl_._cached_size_),
        false,
    },
    &LabelValuesResponse::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LabelValuesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> LabelValuesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::LabelValuesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string values = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LabelValuesResponse, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string values = 1;
    {PROTOBUF_FIELD_OFFSET(LabelValuesResponse, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\6\0\0\0\0\0\0"
    "tsdb.proto.LabelValuesResponse"
    "values"
  }},
};

PROTOBUF_NOINLINE void LabelValuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.LabelValuesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LabelValuesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LabelValuesResponse& this_ = static_cast<const LabelValuesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LabelValuesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LabelValuesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.LabelValuesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string values = 1;
          for (int i = 0, n = this_._internal_values_size(); i < n; ++i) {
            const auto& s = this_._internal_values().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tsdb.proto.LabelValuesResponse.values");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.LabelValuesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LabelValuesResponse::ByteSizeLong(const MessageLite& base) {
          const LabelValuesResponse& this_ = static_cast<const LabelValuesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LabelValuesResponse::ByteSizeLong() const {
          const LabelValuesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.LabelValuesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string values = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_values().size());
              for (int i = 0, n = this_._internal_values().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_values().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LabelValuesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelValuesResponse*>(&to_msg);
  auto& from = static_cast<const LabelValuesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.LabelValuesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelValuesResponse::CopyFrom(const LabelValuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.LabelValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelValuesResponse::InternalSwap(LabelValuesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata LabelValuesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SeriesResponse::_Internal {
 public:
};

SeriesResponse::SeriesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsdb.proto.SeriesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SeriesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tsdb::proto::SeriesResponse& from_msg)
      : series_{visibility, arena, from.series_},
        _cached_size_{0} {}

SeriesResponse::SeriesResponse(
    ::google::protobuf::Arena* arena,
    const SeriesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SeriesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tsdb.proto.SeriesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SeriesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : series_{visibility, arena},
        _cached_size_{0} {}

inline void SeriesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SeriesResponse::~SeriesResponse() {
  // @@protoc_insertion_point(destructor:tsdb.proto.SeriesResponse)
  SharedDtor(*this);
}
inline void SeriesResponse::SharedDtor(MessageLite& self) {
  SeriesResponse& this_ = static_cast<SeriesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SeriesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SeriesResponse(arena);
}
constexpr auto SeriesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SeriesResponse, _impl_.series_) +
          decltype(SeriesResponse::_impl_.series_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SeriesResponse), alignof(SeriesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SeriesResponse::PlacementNew_,
                                 sizeof(SeriesResponse),
                                 alignof(SeriesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SeriesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SeriesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SeriesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SeriesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SeriesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SeriesResponse>(), &SeriesResponse::ByteSizeLong,
            &SeriesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SeriesResponse, _impl_._cached_size_),
        false,
    },
    &SeriesResponse::kDescriptorMethods,
    &descriptor_table_tsdb_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SeriesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SeriesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tsdb::proto::SeriesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tsdb.proto.TimeSeries series = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeriesResponse, _impl_.series_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tsdb.proto.TimeSeries series = 1;
    {PROTOBUF_FIELD_OFFSET(SeriesResponse, _impl_.series_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsdb::proto::TimeSeries>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tsdb.proto.SeriesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.series_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SeriesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SeriesResponse& this_ = static_cast<const SeriesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SeriesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SeriesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tsdb.proto.SeriesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tsdb.proto.TimeSeries series = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_series_size());
               i < n; i++) {
            const auto& repfield = this_._internal_series().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tsdb.proto.SeriesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SeriesResponse::ByteSizeLong(const MessageLite& base) {
          const SeriesResponse& this_ = static_cast<const SeriesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SeriesResponse::ByteSizeLong() const {
          const SeriesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tsdb.proto.SeriesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tsdb.proto.TimeSeries series = 1;
            {
              total_size += 1UL * this_._internal_series_size();
              for (const auto& msg : this_._internal_series()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SeriesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SeriesResponse*>(&to_msg);
  auto& from = static_cast<const SeriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsdb.proto.SeriesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_series()->MergeFrom(
      from._internal_series());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SeriesResponse::CopyFrom(const SeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsdb.proto.SeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SeriesResponse::InternalSwap(SeriesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.series_.InternalSwap(&other->_impl_.series_);
}

::google::protobuf::Metadata SeriesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace tsdb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tsdb_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
