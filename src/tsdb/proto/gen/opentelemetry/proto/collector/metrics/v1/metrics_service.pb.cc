// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: opentelemetry/proto/collector/metrics/v1/metrics_service.proto
// Protobuf C++ Version: 5.29.3

#include "opentelemetry/proto/collector/metrics/v1/metrics_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace opentelemetry {
namespace proto {
namespace collector {
namespace metrics {
namespace v1 {

inline constexpr ExportMetricsPartialSuccess::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rejected_data_points_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExportMetricsPartialSuccess::ExportMetricsPartialSuccess(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportMetricsPartialSuccessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportMetricsPartialSuccessDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportMetricsPartialSuccessDefaultTypeInternal() {}
  union {
    ExportMetricsPartialSuccess _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportMetricsPartialSuccessDefaultTypeInternal _ExportMetricsPartialSuccess_default_instance_;

inline constexpr ExportMetricsServiceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        partial_success_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExportMetricsServiceResponse::ExportMetricsServiceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportMetricsServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportMetricsServiceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportMetricsServiceResponseDefaultTypeInternal() {}
  union {
    ExportMetricsServiceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportMetricsServiceResponseDefaultTypeInternal _ExportMetricsServiceResponse_default_instance_;

inline constexpr ExportMetricsServiceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : resource_metrics_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExportMetricsServiceRequest::ExportMetricsServiceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportMetricsServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportMetricsServiceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportMetricsServiceRequestDefaultTypeInternal() {}
  union {
    ExportMetricsServiceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportMetricsServiceRequestDefaultTypeInternal _ExportMetricsServiceRequest_default_instance_;
}  // namespace v1
}  // namespace metrics
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceRequest, _impl_.resource_metrics_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse, _impl_.partial_success_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess, _impl_.rejected_data_points_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess, _impl_.error_message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceRequest)},
        {9, 18, -1, sizeof(::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse)},
        {19, -1, -1, sizeof(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::opentelemetry::proto::collector::metrics::v1::_ExportMetricsServiceRequest_default_instance_._instance,
    &::opentelemetry::proto::collector::metrics::v1::_ExportMetricsServiceResponse_default_instance_._instance,
    &::opentelemetry::proto::collector::metrics::v1::_ExportMetricsPartialSuccess_default_instance_._instance,
};
const char descriptor_table_protodef_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n>opentelemetry/proto/collector/metrics/"
    "v1/metrics_service.proto\022(opentelemetry."
    "proto.collector.metrics.v1\032,opentelemetr"
    "y/proto/metrics/v1/metrics.proto\"h\n\033Expo"
    "rtMetricsServiceRequest\022I\n\020resource_metr"
    "ics\030\001 \003(\0132/.opentelemetry.proto.metrics."
    "v1.ResourceMetrics\"~\n\034ExportMetricsServi"
    "ceResponse\022^\n\017partial_success\030\001 \001(\0132E.op"
    "entelemetry.proto.collector.metrics.v1.E"
    "xportMetricsPartialSuccess\"R\n\033ExportMetr"
    "icsPartialSuccess\022\034\n\024rejected_data_point"
    "s\030\001 \001(\003\022\025\n\rerror_message\030\002 \001(\t2\254\001\n\016Metri"
    "csService\022\231\001\n\006Export\022E.opentelemetry.pro"
    "to.collector.metrics.v1.ExportMetricsSer"
    "viceRequest\032F.opentelemetry.proto.collec"
    "tor.metrics.v1.ExportMetricsServiceRespo"
    "nse\"\000B\244\001\n+io.opentelemetry.proto.collect"
    "or.metrics.v1B\023MetricsServiceProtoP\001Z3go"
    ".opentelemetry.io/proto/otlp/collector/m"
    "etrics/v1\252\002(OpenTelemetry.Proto.Collecto"
    "r.Metrics.V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_opentelemetry_2fproto_2fmetrics_2fv1_2fmetrics_2eproto,
};
static ::absl::once_flag descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto = {
    false,
    false,
    820,
    descriptor_table_protodef_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
    "opentelemetry/proto/collector/metrics/v1/metrics_service.proto",
    &descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_once,
    descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto::offsets,
    file_level_enum_descriptors_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
    file_level_service_descriptors_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
};
namespace opentelemetry {
namespace proto {
namespace collector {
namespace metrics {
namespace v1 {
// ===================================================================

class ExportMetricsServiceRequest::_Internal {
 public:
};

void ExportMetricsServiceRequest::clear_resource_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_metrics_.Clear();
}
ExportMetricsServiceRequest::ExportMetricsServiceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceRequest& from_msg)
      : resource_metrics_{visibility, arena, from.resource_metrics_},
        _cached_size_{0} {}

ExportMetricsServiceRequest::ExportMetricsServiceRequest(
    ::google::protobuf::Arena* arena,
    const ExportMetricsServiceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportMetricsServiceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : resource_metrics_{visibility, arena},
        _cached_size_{0} {}

inline void ExportMetricsServiceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExportMetricsServiceRequest::~ExportMetricsServiceRequest() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
  SharedDtor(*this);
}
inline void ExportMetricsServiceRequest::SharedDtor(MessageLite& self) {
  ExportMetricsServiceRequest& this_ = static_cast<ExportMetricsServiceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ExportMetricsServiceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportMetricsServiceRequest(arena);
}
constexpr auto ExportMetricsServiceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExportMetricsServiceRequest, _impl_.resource_metrics_) +
          decltype(ExportMetricsServiceRequest::_impl_.resource_metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExportMetricsServiceRequest), alignof(ExportMetricsServiceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExportMetricsServiceRequest::PlacementNew_,
                                 sizeof(ExportMetricsServiceRequest),
                                 alignof(ExportMetricsServiceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportMetricsServiceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportMetricsServiceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportMetricsServiceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportMetricsServiceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportMetricsServiceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportMetricsServiceRequest>(), &ExportMetricsServiceRequest::ByteSizeLong,
            &ExportMetricsServiceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportMetricsServiceRequest, _impl_._cached_size_),
        false,
    },
    &ExportMetricsServiceRequest::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportMetricsServiceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ExportMetricsServiceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExportMetricsServiceRequest, _impl_.resource_metrics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
    {PROTOBUF_FIELD_OFFSET(ExportMetricsServiceRequest, _impl_.resource_metrics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opentelemetry::proto::metrics::v1::ResourceMetrics>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExportMetricsServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_metrics_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportMetricsServiceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportMetricsServiceRequest& this_ = static_cast<const ExportMetricsServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportMetricsServiceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportMetricsServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_resource_metrics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_resource_metrics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportMetricsServiceRequest::ByteSizeLong(const MessageLite& base) {
          const ExportMetricsServiceRequest& this_ = static_cast<const ExportMetricsServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportMetricsServiceRequest::ByteSizeLong() const {
          const ExportMetricsServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
            {
              total_size += 1UL * this_._internal_resource_metrics_size();
              for (const auto& msg : this_._internal_resource_metrics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportMetricsServiceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportMetricsServiceRequest*>(&to_msg);
  auto& from = static_cast<const ExportMetricsServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_resource_metrics()->MergeFrom(
      from._internal_resource_metrics());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportMetricsServiceRequest::CopyFrom(const ExportMetricsServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportMetricsServiceRequest::InternalSwap(ExportMetricsServiceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_metrics_.InternalSwap(&other->_impl_.resource_metrics_);
}

::google::protobuf::Metadata ExportMetricsServiceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportMetricsServiceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExportMetricsServiceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportMetricsServiceResponse, _impl_._has_bits_);
};

ExportMetricsServiceResponse::ExportMetricsServiceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsServiceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExportMetricsServiceResponse::ExportMetricsServiceResponse(
    ::google::protobuf::Arena* arena,
    const ExportMetricsServiceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportMetricsServiceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.partial_success_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess>(
                              arena, *from._impl_.partial_success_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsServiceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExportMetricsServiceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.partial_success_ = {};
}
ExportMetricsServiceResponse::~ExportMetricsServiceResponse() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
  SharedDtor(*this);
}
inline void ExportMetricsServiceResponse::SharedDtor(MessageLite& self) {
  ExportMetricsServiceResponse& this_ = static_cast<ExportMetricsServiceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.partial_success_;
  this_._impl_.~Impl_();
}

inline void* ExportMetricsServiceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportMetricsServiceResponse(arena);
}
constexpr auto ExportMetricsServiceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExportMetricsServiceResponse),
                                            alignof(ExportMetricsServiceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportMetricsServiceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportMetricsServiceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportMetricsServiceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportMetricsServiceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportMetricsServiceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportMetricsServiceResponse>(), &ExportMetricsServiceResponse::ByteSizeLong,
            &ExportMetricsServiceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportMetricsServiceResponse, _impl_._cached_size_),
        false,
    },
    &ExportMetricsServiceResponse::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportMetricsServiceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ExportMetricsServiceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportMetricsServiceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::metrics::v1::ExportMetricsServiceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportMetricsServiceResponse, _impl_.partial_success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
    {PROTOBUF_FIELD_OFFSET(ExportMetricsServiceResponse, _impl_.partial_success_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExportMetricsServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.partial_success_ != nullptr);
    _impl_.partial_success_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportMetricsServiceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportMetricsServiceResponse& this_ = static_cast<const ExportMetricsServiceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportMetricsServiceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportMetricsServiceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.partial_success_, this_._impl_.partial_success_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportMetricsServiceResponse::ByteSizeLong(const MessageLite& base) {
          const ExportMetricsServiceResponse& this_ = static_cast<const ExportMetricsServiceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportMetricsServiceResponse::ByteSizeLong() const {
          const ExportMetricsServiceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.partial_success_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportMetricsServiceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportMetricsServiceResponse*>(&to_msg);
  auto& from = static_cast<const ExportMetricsServiceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.partial_success_ != nullptr);
    if (_this->_impl_.partial_success_ == nullptr) {
      _this->_impl_.partial_success_ =
          ::google::protobuf::Message::CopyConstruct<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess>(arena, *from._impl_.partial_success_);
    } else {
      _this->_impl_.partial_success_->MergeFrom(*from._impl_.partial_success_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportMetricsServiceResponse::CopyFrom(const ExportMetricsServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportMetricsServiceResponse::InternalSwap(ExportMetricsServiceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.partial_success_, other->_impl_.partial_success_);
}

::google::protobuf::Metadata ExportMetricsServiceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportMetricsPartialSuccess::_Internal {
 public:
};

ExportMetricsPartialSuccess::ExportMetricsPartialSuccess(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsPartialSuccess::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

ExportMetricsPartialSuccess::ExportMetricsPartialSuccess(
    ::google::protobuf::Arena* arena,
    const ExportMetricsPartialSuccess& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportMetricsPartialSuccess* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rejected_data_points_ = from._impl_.rejected_data_points_;

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
}
inline PROTOBUF_NDEBUG_INLINE ExportMetricsPartialSuccess::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void ExportMetricsPartialSuccess::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rejected_data_points_ = {};
}
ExportMetricsPartialSuccess::~ExportMetricsPartialSuccess() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
  SharedDtor(*this);
}
inline void ExportMetricsPartialSuccess::SharedDtor(MessageLite& self) {
  ExportMetricsPartialSuccess& this_ = static_cast<ExportMetricsPartialSuccess&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ExportMetricsPartialSuccess::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportMetricsPartialSuccess(arena);
}
constexpr auto ExportMetricsPartialSuccess::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportMetricsPartialSuccess),
                                            alignof(ExportMetricsPartialSuccess));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportMetricsPartialSuccess::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportMetricsPartialSuccess_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportMetricsPartialSuccess::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportMetricsPartialSuccess>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportMetricsPartialSuccess::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportMetricsPartialSuccess>(), &ExportMetricsPartialSuccess::ByteSizeLong,
            &ExportMetricsPartialSuccess::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportMetricsPartialSuccess, _impl_._cached_size_),
        false,
    },
    &ExportMetricsPartialSuccess::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportMetricsPartialSuccess::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 90, 2> ExportMetricsPartialSuccess::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExportMetricsPartialSuccess, _impl_.error_message_)}},
    // int64 rejected_data_points = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExportMetricsPartialSuccess, _impl_.rejected_data_points_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExportMetricsPartialSuccess, _impl_.rejected_data_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 rejected_data_points = 1;
    {PROTOBUF_FIELD_OFFSET(ExportMetricsPartialSuccess, _impl_.rejected_data_points_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(ExportMetricsPartialSuccess, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\104\0\15\0\0\0\0\0"
    "opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void ExportMetricsPartialSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.rejected_data_points_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportMetricsPartialSuccess::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportMetricsPartialSuccess& this_ = static_cast<const ExportMetricsPartialSuccess&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportMetricsPartialSuccess::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportMetricsPartialSuccess& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 rejected_data_points = 1;
          if (this_._internal_rejected_data_points() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_rejected_data_points(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportMetricsPartialSuccess::ByteSizeLong(const MessageLite& base) {
          const ExportMetricsPartialSuccess& this_ = static_cast<const ExportMetricsPartialSuccess&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportMetricsPartialSuccess::ByteSizeLong() const {
          const ExportMetricsPartialSuccess& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // int64 rejected_data_points = 1;
            if (this_._internal_rejected_data_points() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_rejected_data_points());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportMetricsPartialSuccess::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportMetricsPartialSuccess*>(&to_msg);
  auto& from = static_cast<const ExportMetricsPartialSuccess&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_rejected_data_points() != 0) {
    _this->_impl_.rejected_data_points_ = from._impl_.rejected_data_points_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportMetricsPartialSuccess::CopyFrom(const ExportMetricsPartialSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportMetricsPartialSuccess::InternalSwap(ExportMetricsPartialSuccess* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.rejected_data_points_, other->_impl_.rejected_data_points_);
}

::google::protobuf::Metadata ExportMetricsPartialSuccess::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace metrics
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
