name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    name: ${{ matrix.os }}-${{ matrix.compiler }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc-11
            cxx: g++-11
          - os: ubuntu-latest
            compiler: clang
            cc: clang-14
            cxx: clang++-14
          - os: macos-latest
            compiler: gcc
            cc: gcc-11
            cxx: g++-11
          - os: macos-latest
            compiler: clang
            cc: clang
            cxx: clang++

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build
        sudo apt-get install -y libspdlog-dev googletest
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y gcc-11 g++-11
        else
          sudo apt-get install -y clang-14
        fi

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake ninja
        brew install spdlog googletest
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          brew install gcc@11
        fi

    - name: Configure CMake
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        cmake -B ${{github.workspace}}/build \
              -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DBUILD_TESTS=ON \
              -DENABLE_SIMD=ON \
              -G Ninja

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --verbose

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.compiler }}
        path: ${{github.workspace}}/build/Testing 